!function(e,r){"use strict";function t(){return{require:[r,"ngModel"],restrict:"A",controller:n}}function n(e,t,n,i,a,s,l,c,u){function p(e){function r(e){var r=d.toModel.parse(e||"");return r}function t(e){var r=$.toView.parse(e||"");return r.join("")}function n(e,r){function n(e){~i||(i=e)}if(r)return e.join("");var i=-1,o=m.length;e.forEach(function(e,r){var t=m[r];t!==e&&(r>=o?n(r+1,"New Token, set cursor after it"):e===m[r+1]?n(r,"Removed Token, set cursor before next"):n(r+1,"Inserted Token, set cursor after next"),m[r]=e)}),o>e.length&&(n(e.length,"Was truncated: set after last new token"),m.splice(e.length));var a=t(e.join(""));return g(e.join(""),i),a}var i=e.mvMap,a=o(i),l=e.regexp[0],u=e.regexp[1],p=e.commonExp,f=e.tpl[0],v=e.tpl[1];l.type="param_mapping",u.type="param_mapping",l.template=v,u.template=f,l.mapping=a,u.mapping=i,angular.isArray(p)||(p=[p]),l=[l].concat(p),u=[u].concat(p);var d=c.getRepeater(l,!0),$=c.getRepeater(u,!0);d.toModel=c.getMapping(l),$.toView=c.getMapping(u);var w=[r,n],y=[t];s.fillListProcesser(w,h.$parsers),s.fillListProcesser(w,P),s.fillListProcesser(y,h.$formatters),s.fillListProcesser(y,j)}function f(e){for(var r=j.length,t=e;r--;)t=j[r](t,!0);return t}function g(e,r){var t=f(e);console.log("updateView",h.$viewValue,t,h.$viewValue===t),t!==h.$viewValue&&(h.$setViewValue(t),h.$render(),v(r))}function v(e){if(~e&&"undefined"!=typeof e){var r=m.map(f).slice(0,e).join("").length;console.log("setPos",m.map(f).slice(0,e).join(""),e,r),a(function(){l.setSelection(t,r,r,!0),y=r})}}function d(r){var n=l.getSelection(t),i=m.map(f);"undefined"==typeof n.start&&(n.end=n.start=i.join("").length);for(var o=null,s=null,c=0,u=0,p=m.length;p>=c&&(u==n.start&&null===o||u>n.start&&null===o&&(o=c-1),u>=n.end&&null===s&&(s=c),c!=p);c++){var g=m[c];u+=f(g).length}null===o&&(o=s),m.splice(o,s-o,r),i.splice(o,s-o,r),$.assign(e,m.join("")),a(function(){var e=i.slice(0,o).join("").length+f(r).length;l.setSelection(t,e,e,!0)})}var h=t.controller("ngModel"),m=[],$=i(n.ngModel),w=i(n[r])(e),P=[],j=[];angular.extend(w,{addToken:d}),w.modelviews&&w.modelviews.forEach(p);var y=0}function i(){function e(e,n){return Array.isArray(e)?(e.forEach(r(n)),t):t}function r(e){function r(r){var o="push";if(Array.isArray(r)){if(o=r[i],!~["push","unshift"].indexOf(o))throw new Error(t.name+": Wrong method ["+o+"] - push|unshift expected");r=r[n]}e[o](r)}var n=0,i=1;return r}var t=this;t.$name="ParseFormatService",this.getListProcesser=r,this.fillListProcesser=e}function o(e){var r={};for(var t in e)e.hasOwnProperty(t)&&(r[e[t]]=t);return r}e.directive(r,t),e.service("ParseFormatService",i),t.$inject=[],n.$inject=["$scope","$element","$attrs","$parse","$timeout","ParseFormatService","InputSelection","ParserFactory","MappingParser"],i.$inject=[]}(angular.module("arth.tokenized",["arth.parser.svc"]),"arthTokenized");